So with m = 5, accuracy end up being the same. and if I reduce the learning rate, it give math error. So with one of the values that I have tried with and got the accuracy 79.15862068965517 % is given below. Though with epoch =5, it gives the same values. 

python assign4.py train.csv test.csv 6  0.000001  10


m = 6
Learning rate  = 0.000001
Maxiter or epoch = 10

b hidden

0  0.499768
1  0.499768
2  0.499768
3  0.499768
4  0.499768
5  0.499768

w hidden
          0         1         2         3         4         5
0 -0.001822 -0.001822 -0.001822 -0.001822 -0.001822 -0.001822
1  0.000854  0.000854  0.000854  0.000854  0.000854  0.000854
2 -0.008586 -0.008586 -0.008586 -0.008586 -0.008586 -0.008586
3  0.000106  0.000106  0.000106  0.000106  0.000106  0.000106
4  0.003668  0.003668  0.003668  0.003668  0.003668  0.003668
5 -0.000137 -0.000137 -0.000137 -0.000137 -0.000137 -0.000137
6  0.003199  0.003199  0.003199  0.003199  0.003199  0.003199
7 -0.002243 -0.002243 -0.002243 -0.002243 -0.002243 -0.002243
8  0.004444  0.004444  0.004444  0.004444  0.004444  0.004444

b output

0  0.532305
1  0.498421
2  0.499369
3  0.504659
4  0.500377
5  0.498112
6  0.498162

w output
          0         1         2         3         4        5         6
0  0.010272  0.009971  0.009995  0.010025  0.010112  0.01008  0.010039
1  0.010272  0.009971  0.009995  0.010025  0.010112  0.01008  0.010039
2  0.010272  0.009971  0.009995  0.010025  0.010112  0.01008  0.010039
3  0.010272  0.009971  0.009995  0.010025  0.010112  0.01008  0.010039
4  0.010272  0.009971  0.009995  0.010025  0.010112  0.01008  0.010039
5  0.010272  0.009971  0.009995  0.010025  0.010112  0.01008  0.010039

 
training accuracy =  76.04697540438733 %
Testing accuracy =  79.15862068965517 %
